# .bash_profile

# Local and private settings not under version control (e.g. git credentials)
FILES="$HOME/.bash_profile.local"
# Exports
FILES="$FILES $HOME/.bash_exports"
# Aliases
FILES="$FILES $HOME/.bash_aliases"
# Functions
FILES="$FILES $HOME/.bash_functions"
# Custom Bash prompt
FILES="$FILES $HOME/.bash_prompt"

# Source all readable files in FILES
for file in $FILES
do
    [ -r "$file" ] && source "$file"
done

# Load RVM into a shell session *as a function*
[[ -s "$HOME/.rvm/scripts/rvm" ]] && source "$HOME/.rvm/scripts/rvm"

# Bash completion (installed via Homebrew; source after `brew` is added to PATH)
if command -v brew > /dev/null 2>&1; then
    [ -r "$(brew --prefix)/etc/bash_completion" ] && source "$(brew --prefix)/etc/bash_completion"
fi

# Case-insensitive globbing (used in pathname expansion)
shopt -s nocaseglob

# Append to the Bash history file, rather than overwriting it
shopt -s histappend

# When recalling a command from history with number like !123, put it on command line without executing
shopt -s histverify

# Autocorrect typos in path names when using `cd`
shopt -s cdspell

# Check the window size after each command and, if necessary,
# update the values of LINES and COLUMNS.
shopt -s checkwinsize

# SSH config created by mixing ssh/options and ssh/hosts.local
# (ssh/options is in git repo, ssh/hosts.local is not)
# Did also try calling it config and then creating a config.local file and
# aliasing ssh to use that (-F config.local), but that doesn't work with git,
# it's like the alis is ignored
if [ ! -e ~/.ssh/config ]; then
    if [ -e ~/.ssh/hosts.local ]; then
        cat ~/.ssh/options ~/.ssh/hosts.local > ~/.ssh/config
    else
        cp ~/.ssh/options ~/.ssh/config
    fi
fi

